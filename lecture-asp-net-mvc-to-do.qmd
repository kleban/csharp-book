---
title: –¢–µ–º–∞ 4.1. –†–æ–∑—Ä–æ–±–∫–∞ "To-do list" –∑ ASP.NET MVC
keywords: ASP.NET MVC, C#, To-Do List, Entity Framework, SQL, Web Development, MVC Pattern, CRUD, SQLite, Visual Studio
description: "–¶—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—Å—Ç–∏–π To-Do —Å–ø–∏—Å–æ–∫ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é ASP.NET MVC. –í–∏ –Ω–∞–≤—á–∏—Ç–µ—Å—è –Ω–∞–ª–∞—à—Ç–æ–≤—É–≤–∞—Ç–∏ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ —Ä–æ–∑—Ä–æ–±–∫–∏, —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –º–æ–¥–µ–ª—ñ, –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∏ —Ç–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è, –∞ —Ç–∞–∫–æ–∂ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Entity Framework. –ù–∞–ø—Ä–∏–∫—ñ–Ω—Ü—ñ –≤–∏ –∑–º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∏–π –≤–µ–±-–¥–æ–¥–∞—Ç–æ–∫."
author: "–Æ—Ä—ñ–π –ö–ª–µ–±–∞–Ω"
date: "01/02/2025"
date-format: short
---

# üìå –†–æ–∑—Ä–æ–±–∫–∞ To-Do List –∑ ASP.NET MVC

## üõ† –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ —Ä–æ–∑—Ä–æ–±–∫–∏

–ü–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º —Ä–æ–±–æ—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏:

-   **.NET SDK** (<https://dotnet.microsoft.com/download>)
-   **Visual Studio** (<https://visualstudio.microsoft.com/>)
-   **SQL Server** (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ, –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ SQLite –∞–±–æ In-Memory –ë–î)

## 1Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è ASP.NET MVC –ø—Ä–æ—î–∫—Ç—É

1.  –í—ñ–¥–∫—Ä–∏–π—Ç–µ **Visual Studio**.
2.  –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –ø—Ä–æ—î–∫—Ç **ASP.NET Core Web App (Model-View-Controller)**.
3.  –û–±–µ—Ä—ñ—Ç—å **.NET 6+** –∞–±–æ **.NET 5** —è–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É.
4.  –ù–∞–∑–≤—ñ—Ç—å –ø—Ä–æ—î–∫—Ç, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `TodoMvcApp`.
5.  –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å **Create**.

## 2Ô∏è‚É£ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–¥–µ–ª–µ–π (Model)

–§–∞–π–ª: `Models/TodoItem.cs`

``` csharp
using System.ComponentModel.DataAnnotations;

namespace TodoMvcApp.Models
{
    public class TodoItem
    {
        public int Id { get; set; }
        
        [Required]
        public string Task { get; set; }
        
        public bool IsCompleted { get; set; }
    }
}
```

## 3Ô∏è‚É£ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö

–§–∞–π–ª: `Data/AppDbContext.cs`

``` csharp
using Microsoft.EntityFrameworkCore;
using TodoMvcApp.Models;

namespace TodoMvcApp.Data
{
    public class AppDbContext : DbContext
    {
        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options) { }

        public DbSet<TodoItem> TodoItems { get; set; }
    }
}
```

–î–æ–¥–∞–π—Ç–µ –≤ `appsettings.json` –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ SQLite:

``` json
"ConnectionStrings": {
  "DefaultConnection": "Data Source=todo.db"
}
```

–ù–∞–ª–∞—à—Ç—É–π—Ç–µ DI —É `Program.cs`:

``` csharp
using Microsoft.EntityFrameworkCore;
using TodoMvcApp.Data;

var builder = WebApplication.CreateBuilder(args);

builder.Services.AddControllersWithViews();
builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseSqlite(builder.Configuration.GetConnectionString("DefaultConnection")));

var app = builder.Build();
app.UseStaticFiles();
app.UseRouting();
app.UseAuthorization();
app.MapControllerRoute(name: "default", pattern: "{controller=Todo}/{action=Index}/{id?}");

app.Run();
```

## 4Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞ (Controller)

–§–∞–π–ª: `Controllers/TodoController.cs`

``` csharp
using Microsoft.AspNetCore.Mvc;
using TodoMvcApp.Data;
using TodoMvcApp.Models;

namespace TodoMvcApp.Controllers
{
    public class TodoController : Controller
    {
        private readonly AppDbContext _context;

        public TodoController(AppDbContext context)
        {
            _context = context;
        }

        public IActionResult Index()
        {
            var todos = _context.TodoItems.ToList();
            return View(todos);
        }

        [HttpPost]
        public IActionResult Create(TodoItem todo)
        {
            if (ModelState.IsValid)
            {
                _context.TodoItems.Add(todo);
                _context.SaveChanges();
                return RedirectToAction("Index");
            }
            return View(todo);
        }

        [HttpPost]
        public IActionResult ToggleComplete(int id)
        {
            var todo = _context.TodoItems.Find(id);
            if (todo != null)
            {
                todo.IsCompleted = !todo.IsCompleted;
                _context.SaveChanges();
            }
            return RedirectToAction("Index");
        }

        public IActionResult Delete(int id)
        {
            var todo = _context.TodoItems.Find(id);
            if (todo != null)
            {
                _context.TodoItems.Remove(todo);
                _context.SaveChanges();
            }
            return RedirectToAction("Index");
        }
    }
}
```

## 5Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è (View)

–§–∞–π–ª: `Views/Todo/Index.cshtml`

``` html
@model IEnumerable<TodoMvcApp.Models.TodoItem>

<h2>To-Do List</h2>

<form asp-action="Create" method="post">
    <input type="text" name="Task" required />
    <button type="submit">–î–æ–¥–∞—Ç–∏</button>
</form>

<table>
    <thead>
        <tr>
            <th>–ó–∞–≤–¥–∞–Ω–Ω—è</th>
            <th>–°—Ç–∞—Ç—É—Å</th>
            <th>–î—ñ—ó</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Task</td>
                <td>
                    <form asp-action="ToggleComplete" method="post">
                        <input type="hidden" name="id" value="@item.Id" />
                        <button type="submit">@(item.IsCompleted ? "‚úî" : "‚úñ")</button>
                    </form>
                </td>
                <td>
                    <a asp-action="Delete" asp-route-id="@item.Id">–í–∏–¥–∞–ª–∏—Ç–∏</a>
                </td>
            </tr>
        }
    </tbody>
</table>
```

## 6Ô∏è‚É£ –ú—ñ–≥—Ä–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö

–í–∏–∫–æ–Ω–∞–π—Ç–µ —É **–¢–µ—Ä–º—ñ–Ω–∞–ª—ñ**:

``` sh
dotnet ef migrations add InitialCreate
dotnet ef database update
```

## 7Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—î–∫—Ç—É

``` sh
dotnet run
```

–í—ñ–¥–∫—Ä–∏–π—Ç–µ `http://localhost:5000/Todo` —É –±—Ä–∞—É–∑–µ—Ä—ñ.

–ì–æ—Ç–æ–≤–æ! üéâ –í–∏ —Ä–æ–∑—Ä–æ–±–∏–ª–∏ To-Do List –Ω–∞ –æ—Å–Ω–æ–≤—ñ **ASP.NET MVC**.

---

# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞

- [x] Helland, A., Durano, V. M., Chilberto, J. A., & Price, E. (2020). ASP.NET Core 5 for Beginners: Kick-start your ASP.NET web development journey with the help of step-by-step tutorials and examples. Packt Publishing.

- [x] OpenAI

---

&copy 2025 –Æ—Ä—ñ–π –ö–ª–µ–±–∞–Ω + Open AI