---
title: "1.4	.NET Framework: поняття та структура"
keywords: Microsoft .NET, CLR, FCL, MSIL, керований код, платформа, специфікація CLS, веб-додатки, JIT-компіляція, розподілені додатки, .NET Framework.
description: "Лекція описує основні компоненти платформи Microsoft .NET, таких як CLR (Common Language Runtime), FCL (.NET Framework Class Library), та MSIL (Microsoft Intermediate Language). Визначено роль платформи в забезпеченні виконання програмного коду та взаємодії з операційною системою. Розглянуто основи створення програм на платформі .NET, включаючи керований та некерований код, а також переваги використання бібліотеки класів для розробки різноманітних додатків: від графічних інтерфейсів до веб-сервісів та роботи з базами даних."
author: "Юрій Клебан"
date: "28/12/2024"
date-format: short
---

**Платформа** — у контексті інформаційних технологій - середовище, що забезпечує виконання програмного коду. Платформа визначається характеристиками процесорів, особливостями операційних систем.

**`Framework`** — це інфраструктура середовища виконання програм, щось, що визначає особливості розробки і виконання програмного коду на даній платформі. Передбачає засоби організації взаємодії з операційною системою і прикладними програмами, методи доступу до баз даних, засоби підтримки розподілених (мережевих) додатків, мови програмування, безліч базових класів, уніфіковані інтерфейси користувача, парадигми програмування. `Microsoft .NET` — платформа.

**`.NET Framework`** — інфраструктура платформи Microsoft .NET. Включає наступні основні компоненти: `Common Language Runtime` (`CLR`) і `.NET Framework Class Library` (`.NET FCL`).

**`CLS` (`Common Language Specification`)** — загальна специфікація мов програмування. Це набір конструкцій і обмежень, які є інструкцією для розробників бібліотек і компіляторів в середовищі `.NET Framework`. Бібліотеки, побудовані відповідно до `CLS`, можуть бути використані у будь-якій мові програмування, що підтримує `CLS`. Мови, відповідні `CLS` (до їх числа відносяться мови `Visual C#`, `Visual Basic`, `Visual C++`), можуть інтегруватися один з одним. `CLS` - це основа міжмовної взаємодії в рамках платформи `Microsoft .NET`.

**`CLR` (`Common Language Runtime`)** — Середовище Часу Виконання або Віртуальна Машина. Забезпечує виконання збірки. Основний компонент `.NET Framework`. Під Віртуальною Машиною розуміють абстракцію інкапсульованої (відособленої) керованої операційної системи високого рівня, яка забезпечує виконання (керованого) програмного коду.

**Керований код** — програмний код, який під час виконання здатний використовувати служби, що надаються `CLR`. Відповідно, некерований код подібною здатністю не володіє.

Тобто, `CLR` - це набір служб, необхідних для виконання керованого коду. Сама `CLR` складається з двох головних компонентів: ядра (`mscoree.dll`) і бібліотеки базових класів (`mscorlib.dll`). Наявність цих файлів на диску - ознака того, що на комп'ютері, принаймні, була зроблена спроба встановлення платформи `.NET`.

**`FCL` (`.NET Framework Class Library`)** — відповідна `CLS`-спеціфікаціії об'єктно-орієнтована бібліотека класів, інтерфейсів і системи типів (типів-значень), які включаються до складу платформи Microsoft `.NET`. Ця бібліотека забезпечує доступ до функціональних можливостей системи і призначена служити основою при розробці `.NET`-додатків, компонент, елементів управління.

`.NET` бібліотека класів є другим компонентом `CLR`. `.NET FCL` можуть використовувати усі

`.NET`-додатки, незалежно від призначення архітектури використовуваного при розробці мови програмування, і зокрема:

-   [x] вбудовані (елементарні) типи, представлені у вигляді класів (на платформі .NET все побудовано на структурах або класах);
-   [x] класи для розробки графічного користувацького інтерфейсу (`Windows Forms`);
-   [x] класи для розробки `web`-додатків і `web`-служб на основі технології `ASP.NET` (`Web Forms`);
-   [x] класи для розробки `XML` і Internet-протоколів (`FTP`, `HTTP`, `SMTP`, `SOAP`);
-   [x] класи для розробки додатків, що працюють з базами даних (`ADO .NET`) і багато що інших.

**`.NET`-застосування** — програма, розроблена для виконання на платформі `Microsoft .NET`. Реалізується на мовах програмування, відповідних `CLS`.

**`MSIL` (`Microsoft Intermediate Language`)** — проміжна мова платформи `Microsoft .NET`. Вихідні тексти програм для `.NET`-додатків пишуться на мовах програмування, відповідних специфікації `CLS`. Для таких мов може бути побудований перетворювач в `MSIL`. Таким чином, програми на цих мовах можуть транслюватися в проміжний код на `MSIL`. Завдяки відповідності `CLS`, в результаті трансляції програмного коду, написаного на різних мовах, виходить сумісний `IL`-код.

Схема виконання .NET додатків у середовищі CLR:

![](diagrams/csharp-books/lecture-1-dotnet-code-run.svg)
<::: {.class}
1.2. Процес запуску .NET-програми"
:::> 

{{% callout note %}} Усі блок-схеми створено у *draw.io*.`<br>` Файли можна знайти [у github репозиторії курсу](https://github.com/kleban/csharp-book/blob/master/diagrams). {{% / callout %}}

У середовищі `CLR` допускається спільна робота і взаємодія компонентів програмного забезпечення, реалізованих на різних мовах програмування. CLR бере на себе вирішення багатьох проблем, які традиційно знаходилися в зоні особливої уваги розробників програмного забезпечення.

До функцій, виконуваних `CLR`, відносяться:

1.  Перевірка і динамічна (`JIT`) компіляція `MSIL`-коду у команди процесора.
2.  Управління пам'яттю, процесами і потоками.
3.  Організація взаємодії процесів.
4.  Вирішення проблем безпеки (в рамках безпеки, що існує в системі політики).

------------------------------------------------------------------------